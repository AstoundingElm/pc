"func add(v: Vector, w: Vector): Vector { return {v.x + w.x, v.y + w.y}; }",
"var x = add({1,2}, {3,4})",
"var v: Vector = {1,2}",
"var w = Vector{3,4}",
"var p: void*",
"var i = cast(int, p) + 1",

"var a: int[3] = {1,2,3}",
"var b: int[4]",
"var p = &a[1]",
"var i = p[1]",
"var j = *p",
"const n = sizeof(a)",
"const m = sizeof(&a[0])",
"const l = sizeof(1 ? a : b)",
"var pi = 3.14",
"var name = \"Per\"",
"var v = Vector{1,2}",
// "var j = cast(int, p)",
// "var q = cast(int*, j)",
"const i = 42",
//   "const j = +i",
//   "const k = -i",
"const a = 1000/((2*3-5) << 1)",
"const b = !0",
"const c = ~100 + 1 == -100",
"const k = 1 ? 2 : 3",
"union IntOrPtr { i: int; p: int*; }",
"var i = 42",
"var u = IntOrPtr{i, &i}",
"const n = 1+sizeof(p)",
"var p: T*",
"var u = *p",
"struct T { a: int[n]; }",
"var r = &t.a",
"var t: T",
"typedef S = int[n+m]",
"const m = sizeof(t.a)",
"var i = n+m",
"var q = &i",

"const n = sizeof(x)",
"var x: T",
"struct T { s: S*; }",
"struct S { t: T[n]; }",